/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-06-29 03:44:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;

public final class welcome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

	// 선언문(전역변수)
		String greeting = "Welcome to 이소연 World";
		String tagline = "Welcome to 소연이 Market!";
		
	
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1687740157652L));
    _jspx_dependants.put("/menu.jsp", Long.valueOf(1687739769749L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1687487449961L));
    _jspx_dependants.put("jar:file:/C:/eclipse202006/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/WebMarket/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

// out.print(greeting);
// out.print(test);	// 문제발생!

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("   href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- //////// header 시작 (menu.jsp) //////// -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n");
      out.write("	<!-- container : 내용이 들어갈 때 -->\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"navhar-header\">\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"./welcome.jsp\">Home</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("	<!-- //////// header 끝 //////// -->\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /welcome.jsp(27,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("tagline");
        // /welcome.jsp(27,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue( tagline );
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("\r\n");
      out.write("	<div class=\"jumbotron\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"display-3\">\r\n");
      out.write("				");
      out.print( greeting );
      out.write("\r\n");
      out.write("				\r\n");
      out.write("			</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"text-center\">\r\n");
      out.write("			<h3>\r\n");
      out.write("				");
      out.print( tagline );
      out.write("\r\n");
      out.write("				");

					Date day = new Date();
					// 지역변수 (위에서 사용X, 이 코드 아래에서만 가능)
					String am_pm;
					int hour = day.getHours();
					int minute = day.getMinutes();
					int second = day.getSeconds();
					
					if(hour/12==0){ // 0~11=>0. 정수/정수=>정수
						am_pm = "AM";
					} else { // 12~24=>1 또는 2
						am_pm = "PM";
						// 13~23시면 1~11시로 표현
						hour = hour - 12;
					}
					String CT = hour + ":" + minute + ":" + second
						   + " " + am_pm;
					// JSP의 기본 내장 객체 중 화면에 출력
					out.print("현재 접속 시각 : " + CT + "<br />");
				
      out.write("\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("			</h3>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- //////// footer 시작 (footer.jsp) //////// -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<footer class=\"container\">\r\n");
      out.write("	<p>&copy;WebMarket</p>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("	<!-- //////// footer 끝 (footer.jsp) //////// -->\r\n");
      out.write("<script>\r\n");
      out.write("// 현재시간 처리\r\n");
      out.write("function gogo(){\r\n");
      out.write("	// JSTL변수를 J/S변수에 할당\r\n");
      out.write("	let tagline = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tagline}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	console.log(\"tagline : \" + tagline);\r\n");
      out.write("	\r\n");
      out.write("	//<h3>태그 select(object)\r\n");
      out.write("	let h3 = document.getElementsByTagName(\"h3\")[0];\r\n");
      out.write("	\r\n");
      out.write("	let today = new Date();\r\n");
      out.write("	\r\n");
      out.write("	console.log(today);\r\n");
      out.write("	\r\n");
      out.write("	let year = today.getFullYear();\r\n");
      out.write("	let month = ('0' + (today.getMonth()+1)).slice(-2);\r\n");
      out.write("	let day = ('0' + today.getDate()).slice(-2);\r\n");
      out.write("	let dateString = year + \"-\" + month + \"-\" + day;\r\n");
      out.write("	console.log(\"dateString : \" + dateString); \r\n");
      out.write("	\r\n");
      out.write("	let hours = ('0' + (today.getHours()+1)).slice(-2);\r\n");
      out.write("	let minutes = ('0' + (today.getMinutes()+1)).slice(-2);\r\n");
      out.write("	let seconds = ('0' + (today.getSeconds()+1)).slice(-2);\r\n");
      out.write("	\r\n");
      out.write("	let timeString = hours + \":\" + minutes + \":\" + seconds;\r\n");
      out.write("	console.log(\"result : \" + dateString + \" \" + timeString); \r\n");
      out.write("	\r\n");
      out.write("	// select\r\n");
      out.write("	//document.getElementById(\"p1\").innerHTML = dateString + \" \" + timeString;\r\n");
      out.write("	 h3.innerHTML = tagline + \" \" + \"현재 시각 : \" + dateString + \" \" + timeString;\r\n");
      out.write("}\r\n");
      out.write("setInterval(gogo, 1000); // 1초마다 gogo 함수를 요청\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
